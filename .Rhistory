x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_grid(~correction_type)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_bw() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
tg
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme(legend.position = "null")+
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)
?legend.position
??legend.position
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme(legend.position = "None")+
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
dat$altitude.corrected.null #uncorrected altitude
dat_long <- dat %>%
pivot_longer(
cols = starts_with("altitude.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
dat$altitude.corrected.null <- dat$altitude.fix#uncorrected altitude
dat_long <- dat %>%
pivot_longer(
cols = starts_with("altitude.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
dat$length.corrected.null <- dat$bal.length
length.pixels = dat$pixel.length)
dat$length.corrected.null
dat$length.corrected.rand
dat_long <- dat %>%
pivot_longer(
cols = starts_with("length.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
#compare errors from three models
dat$length.corrected.nh<- morpho.length.alpha(altitude =dat$fit.nh,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$length.corrected.rand.int<- morpho.length.alpha(altitude =dat$fit.rand.int,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$length.corrected.rand<- morpho.length.alpha(altitude =dat$fit.rand,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$length.corrected.null <- dat$bal.length
dat_long <- dat %>%
pivot_longer(
cols = starts_with("length.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
#facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
dat$length.corrected.0 <- dat$bal.length
dat_long <- dat %>%
pivot_longer(
cols = starts_with("length.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/balae/Documents/SpermWhale_SexAge_Drone_VSC")
source("Scripts/00_DJI_Mini_Callibration_Data_Prep.R")
library(ggplot2)
library("wacolors")
px.length <- function(l.m, p.d, f.l = 4.25531, a.m){
(l.m/p.d)*(f.l/a.m)
}
#calculate pixel length:
dat$pixel.length <- px.length(l.m=dat$length,
p.d = dat$pixelDimension.old,
a.m = dat$altitude)
dat<- dat %>% select(Date, FlightNo, imageName, timeStamp, altitudeRaw = altitude, imageWidth = ImageWidth, pixel.length, position = pos, nadir = nadir)
dat<- dat[-which(dat$nadir==F),]
head(dat)
#recalculate Balaena's length in m, with new altitude
boat.height = 1.03- 0.24# balaena's altitude over the water - toe rail
launch.chest = 1.4 # Mateo's chest height
camera.height = 0.045 # cameras distance above the base of the drone's legsfrom legs
dat$altitude.fix <- dat$altitude + launch.chest + camera.height
head(dat)
morpho.length.alpha <- function(image.width, altitude, length.pixels){
alpha = ifelse(image.width == 3840, yes = 0.000328, no =
ifelse(image.width == 1920, yes = 0.000656, no = NA))
length = alpha * altitude * length.pixels
return(length)
}
dat$bal.length<- morpho.length.alpha(altitude = dat$altitude.fix,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
summary(dat$bal.length)
dat$error <- dat$bal.length-12.03
mean(dat$error)
sd(dat$error)
ggplot(dat, aes(x = factor(position), y = error))+
geom_boxplot()
true.altitude <- function(true.length, pixel.length, image.width){
alpha = ifelse(image.width == 3840, yes = 0.000328, no =
ifelse(image.width == 1920, yes = 0.000656, no = NA))
t.a = (true.length/(pixel.length* alpha))
return(t.a)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$imageWidth)
dat$altitude.err <- dat$true.altitude - dat$altitude.fix
dat$altitude.err.p <- (dat$altitude.err/dat$true.altitude)
hist(dat$altitude.err, breaks = 30, xlab = "altitude error (m)",
main = "")
text(x = 10, y = 40, paste("mean error = ",signif(mean(dat$altitude.err), digits =3)))
text(x = 10, y = 35, paste("s.d. = ",signif(sd(dat$altitude.err), digits =3)))
ggplot(dat, aes(x = altitude.fix, y = true.altitude))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
#
library(nlme)
# non-hierarchical
m.nh <- gls(true.altitude ~ altitude.fix,, data = dat, method = "ML")
summary(m.nh) #AIC = 1405.26/ BIC = 1416.77
# model random intercept :
m.rand.int <- lme(true.altitude ~ altitude.fix, data = dat, method = "ML",
random = ~1|Date)#
summary(m.rand.int) # AIC = 1389.933 BIC = 1405.284	- probably yes?
intervals(m.rand.int, level = 0.95)
#model random intercept and slope:
m.rand <- lme(true.altitude ~ altitude.fix, data = dat, method = "ML",
random = ~altitude.fix|Date)#
summary(m.rand) # AIC = 1389.933 BIC = 1405.284	- probably yes?
dat$fit.nh <- fitted(m.nh) #non-hierarchical
dat$fit.rand.int <- fitted(m.rand.int) #random intercepts
dat$fit.rand <- fitted(m.rand) # random slopes
#compare errors from three models
dat$length.corrected.nh<- morpho.length.alpha(altitude =dat$fit.nh,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$length.corrected.rand.int<- morpho.length.alpha(altitude =dat$fit.rand.int,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$length.corrected.rand<- morpho.length.alpha(altitude =dat$fit.rand,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$length.corrected.0 <- dat$bal.length
dat_long <- dat %>%
pivot_longer(
cols = starts_with("length.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03)
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
summary_corrections <- dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error))
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error))
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = mean(error)/12.03)
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = 100*mean(error)/12.03)
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = 100*mean(error)/12.03,
quant_5 = quantile(error, probs = 0.05))
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = 100*mean(error)/12.03,
quant_5 = quantile(error, probs = 0.05),
quant_95 = quantile(error, probs = 0.95))
ggplot(dat, aes(x = true.altitude, y = altitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
mean(dat$altitude.err.p)
quantile(dat$altitude.err.p, probs = c(0.05, 0.95))
dat$altitude.corr <-1.40 + dat$altitude.fix*1.017
dat$bal.length.c<- morpho.length.alpha(altitude =dat$altitude.corr,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
quantile(dat$bal.length.c, probs = c(0.05, 0.5, 0.95))
quantile(dat$bal.length.c-12.03, probs = c(0.05, 0.5, 0.95))
hist(dat$bal.length.c, breaks = 30, main = "", xlab = "estimated length")
abline(v = 12.03, col = 2, lwd = 2)
text(x = 13, y = 40, paste("mean = ",mean(dat$bal.length.c)))
text(x = 13, y = 35, paste("s.d. = ",sd(dat$bal.length.c)))
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
dat$length.error.p <- (dat$error/dat$bal.length)*100
e <- c(dat$length.error.c.p,dat$length.error.p)
d <- data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$bal.length)))
ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "corrected % error", x = "error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
quantile(dat$length.error.c.p, probs=c(0.05, 0.95))
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
e <- c(dat$length.error.c.p,dat$length.error.p)
d <- data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$bal.length)))
ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "corrected % error", x = "error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
dat$length.error.c.p
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
e <- c(dat$length.error.c.p,dat$length.error.p)
d <- data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$bal.length)))
ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "corrected % error", x = "error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
quantile(dat$length.error.c.p, probs=c(0.05, 0.95))
dat_long <- dat %>%
pivot_longer(
cols = starts_with("length.corrected"),
names_to = "correction_type",
values_to = "corrected_altitude"
)%>%
mutate(error = corrected_altitude - 12.03,
error_p = 100*(error/12.03))
ggplot(dat_long, aes(x = error, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error (m)",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
ggplot(dat_long, aes(x = error_p, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error %",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
ggplot(dat_long, aes(x = error_p, fill = correction_type)) +
stat_halfeye(alpha = 0.5, adjust = 1) +
theme_classic() +
labs(
title = "Density plots of corrected altitudes",
x = "Error %",
y = "Density",
fill = "Correction Type"
)+
facet_wrap(~correction_type, ncol = 1)+
theme(legend.position = "None")+scale_fill_wa_d("rainier")
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = mean(error_p),
quant_5 = quantile(error_p, probs = 0.05),
quant_95 = quantile(error_, probs = 0.95))
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = mean(error_p),
quant_5 = quantile(error_p, probs = 0.05),
quant_95 = quantile(error_p, probs = 0.95))
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = mean(error_p),
quant_5 = quantile(error_p, probs = 0.05),
quant_95 = quantile(error_p, probs = 0.95),
ic_range = quant_95-quant_5)
quantile(dat$altitude.err.p, probs = c(0.025, 0.975))
dat_long %>%
group_by(correction_type)%>%
summarise(mean_err = mean(error),
mean_err_p = mean(error_p),
quant_5 = quantile(error_p, probs = 0.025),
quant_95 = quantile(error_p, probs = 0.975),
ic_range = quant_95-quant_5)
ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "% error", x = "error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "Error %", x = "Error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "Error %", x = "Error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
library(wacolors)
setwd( "C:/Users/balae/Documents/SpermWhale_SexAge_Drone_VSC")
p1 <-ggplot(d, aes(x = error.type, y = perc.error, fill = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-20,20))+
labs(y = "Error %", x = "Error type")+
theme_classic()+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed", colour = "gray")+
geom_hline(yintercept = 5, linetype = "dashed", colour = "gray")+
scale_fill_wa_d("rainier")
ggsave("Figures/measuerement_error_corrected.png",
p1, width = 3, height = 3)
